{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/items.js","actions/types.js","reducers/category.js","reducers/myitems.js","utils/utility.js","reducers/swaprequests.js","reducers/categories.js","reducers/index.js","store.js","services/auth-header.js","services/category-service.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","services/item-service.js","actions/items.js","actions/myitems.js","services/swaprequest-service.js","components/SwapModal/SwapModal.js","pages/ItemsMenu/ProductDetails/ProductDetails.js","actions/swaprequests.js","helpers/history.js","components/CategoryFilter/CategoryFilter.js","actions/category.js","components/Item/Item.js","pipes/categoryFilter.js","containers/ItemList/ItemList.js","pages/ItemsMenu/ItemsMenu.js","pages/WarehouseMenu/WarehouseMenu.js","pages/WhItemDetails/WhItemDetails.js","pages/MyItems/MyItems.js","pages/MyProductDetails/MyProductDetails.js","services/upload-files.service.js","pages/AddItem/AddItem.js","actions/categories.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","items","loading","curitem","updateObject","oldObject","updatedProperties","fetchItemsStart","state","action","fetchItemsSuccess","fetchItemsFail","fetchWhItemsStart","fetchWhItemsSuccess","fetchWhItemsFail","takeWhItemsSuccess","updatedItem","console","log","id","filter","item","concat","takeWhItemsFail","returnWhItemsSuccess","returnWhItemsFail","fetchAnItemSuccess","fetchAnItemFail","deleteItemSuccess","deleteItemFail","reducer","type","categoryFilterReducer","includes","category","reg","RegExp","replace","myitems","fetchMyItemsStart","fetchMyItemsSuccess","fetchMyItemsFail","addItemSuccess","addItemFail","itemrequests","myswaprequests","purchased","sendInit","sendSwapStart","sendSwapSuccess","newSwap","swapData","sendSwapFail","deleteSwapSuccess","deleteSwapFail","fetchMyRequestsSuccess","myRequests","fetchMyRequestsFail","fetchItemRequestsSuccess","fetchItemRequestsFail","performItemRequestsSuccess","performItemRequestsFail","deleteItemRequestsSuccess","deleteItemRequestsFail","categories","fetchCategoriesSuccess","fetchCategoriesFail","combineReducers","auth","payload","message","categoryFilter","swapRequests","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","authHeader","accessToken","Authorization","results","axios","get","API_URL","headers","then","response","data","forEach","push","name","error","username","password","post","setItem","stringify","removeItem","email","phoneNumber","contact","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","toString","reject","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","onChangePhoneNumber","onChangeStreet","onChangeCity","onChangeState","onChangePostalCode","onChangeCountry","street","city","postalCode","country","successful","register","Home","content","UserService","getPublicContent","Profile","currentUser","substring","substr","roles","map","index","key","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","backdrop","show","class","onClick","clicked","Modal","nextProps","nextState","children","Fragment","modalClosed","transform","opacity","itemid","delete","userId","put","itemData","returnWhItems","ItemService","sendWhItem","fetchMyItems","getMyItems","SwapModal","selectedItemId","change","event","clickHandler","warehouse","submitted","find","onFetchMyItems","ss","selected","canceled","actions","ProductDetails","requested","requestId","purchaseCancelHandler","sendrequestHandler","cancelrequestHandler","onDeleteSwapRequest","myrequest","sendRequestHandler","param","nameparam","requestedItemId","requestedItemName","requestedUserId","swapItemId","swapItemName","swapUserId","swapUserName","accepted","onSendSwapRequest","onFetchCurItem","match","params","bt","url","description","req","SwapService","postSwapRequest","deleteSwapRequest","itemId","withRouter","createBrowserHistory","categoryItemscount","p","handleSelectBox","checked","onInput","for","Item","sectionStyle","backgroundImage","arr","ItemList","onFetchItems","onFetchMyRequests","onFetchWhItems","getItems","getWhItems","getMySwaps","ItemsMenu","CategoryService","getCategories","WarehouseMenu","WhItemDetails","onReturnItem","releaseDate","onTakeItem","href","takeWhItem","MyItems","ff","aria-label","size","MyProductDetails","performRequestHandler","onPerformRequests","deleteRequestHandler","onDeleteRequests","sendToWhHandler","onSendToWareHouse","deleteItemHandler","onDeleteItem","onFetchRequests","zz","request","height","width","getItemSwaps","performSwapRequest","deleteItem","file","onUploadProgress","formData","FormData","append","AddItem","onChangeName","onChangeCategory","onChangeDescription","selectFile","itemdata","selectedFiles","currentFile","fileName","progress","proxy","UploadService","upload","Math","round","loaded","total","Date","onAddItem","files","onFetchCategories","marginLeft","marginRight","placeholder","data-error","rows","getCategoriesItem","addItem","App","logOut","showModeratorBoard","showAdminBoard","undefined","listen","logout","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26b7f166.chunk.js","sourcesContent":["import * as actionTypes from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case actionTypes.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case actionTypes.REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case actionTypes.LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false,\r\n    curitem:\"\"\r\n};\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nconst fetchItemsStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchItemsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        items: action.items,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchItemsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst fetchWhItemsStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchWhItemsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        items: action.items,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchWhItemsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n/*********** take Whitem */\r\n\r\nconst takeWhItemsSuccess = ( state, action ) => {\r\n    const updatedItem=action.items;\r\n   console.log('*********Here is updateditem in reducers   '+updatedItem.id);\r\n    return updateObject( state, {\r\n        items: state.items.filter(item => item.id !== updatedItem.id).concat(updatedItem),\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst takeWhItemsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\n\r\n/*********** return Whitem */\r\n\r\nconst returnWhItemsSuccess = ( state, action ) => {\r\n    const updatedItem=action.items;\r\n    return updateObject( state, {\r\n        items: state.items.concat(updatedItem),\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst returnWhItemsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst fetchAnItemSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        curitem: action.curitem,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchAnItemFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst deleteItemSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst deleteItemFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.FETCH_ITEMS_START: return fetchItemsStart( state, action );\r\n        case actionTypes.FETCH_ITEMS_SUCCESS: return fetchItemsSuccess( state, action );\r\n        case actionTypes.FETCH_ITEMS_FAIL: return fetchItemsFail( state, action );\r\n        case actionTypes.FETCH_WHITEMS_START: return fetchWhItemsStart( state, action );\r\n        case actionTypes.FETCH_WHITEMS_SUCCESS: return fetchWhItemsSuccess( state, action );\r\n        case actionTypes.FETCH_WHITEMS_FAIL: return fetchWhItemsFail( state, action );\r\n        case actionTypes.TAKE_WHITEM_SUCCESS: return takeWhItemsSuccess( state, action );\r\n        case actionTypes.TAKE_WHITEM_FAIL: return takeWhItemsFail( state, action );\r\n        case actionTypes.RETURN_WHITEM_SUCCESS: return returnWhItemsSuccess( state, action );\r\n        case actionTypes.RETURN_WHITEM_FAIL: return returnWhItemsFail( state, action );\r\n        case actionTypes.FETCH_ANITEM_SUCCESS: return fetchAnItemSuccess( state, action );\r\n        case actionTypes.FETCH_ANITEM_FAIL: return fetchAnItemFail( state, action );\r\n        case actionTypes.DELETE_ITEM_SUCCESS: return deleteItemSuccess( state, action );\r\n        case actionTypes.DELETE_ITEM_FAIL: return deleteItemFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const FETCH_ITEMS_START = 'FETCH_ITEMS_START';\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\nexport const FETCH_ITEMS_FAIL = 'FETCH_ITEMS_FAIL';\r\n\r\nexport const FETCH_WHITEMS_START = 'FETCH_WHITEMS_START';\r\nexport const FETCH_WHITEMS_SUCCESS = 'FETCH_WHITEMS_SUCCESS';\r\nexport const FETCH_WHITEMS_FAIL = 'FETCH_WHITEMS_FAIL';\r\n\r\nexport const ADD_CATEGORY_TO_FILTER = 'ADD_CATEGORY_TO_FILTER';\r\nexport const REMOVE_CATEGORY_FROM_FILTER = 'REMOVE_CATEGORY_FROM_FILTER';\r\n\r\n\r\nexport const FETCH_MYITEMS_START = 'FETCH_MYITEMS_START';\r\nexport const FETCH_MYITEMS_SUCCESS = 'FETCH_MYITEMS_SUCCESS';\r\nexport const FETCH_MYITEMS_FAIL = 'FETCH_MYITEMS_FAIL';\r\n\r\n\r\nexport const SEND_SWAP_START = 'SEND_SWAP_START';\r\nexport const SEND_SWAP_SUCCESS = 'SEND_SWAP_SUCCESS';\r\nexport const SEND_SWAP_FAIL = 'SEND_SWAP_FAIL';\r\nexport const SEND_INIT = 'SEND_INIT';\r\n\r\nexport const DELETE_SWAP_SUCCESS = 'DELETE_SWAP_SUCCESS';\r\nexport const DELETE_SWAP_FAIL = 'DELETE_SWAP_FAIL';\r\n\r\nexport const FETCH_MYREQUESTS_SUCCESS = 'FETCH_MYREQUESTS_SUCCESS';\r\nexport const FETCH_MYREQUESTS_FAIL = 'FETCH_MYREQUESTS_FAIL';\r\n\r\nexport const TAKE_WHITEM_SUCCESS = 'TAKE_WHITEM_SUCCESS';\r\nexport const TAKE_WHITEM_FAIL = 'TAKE_WHITEM_FAIL';\r\n\r\nexport const RETURN_WHITEM_SUCCESS = 'RETURN_WHITEM_SUCCESS';\r\nexport const RETURN_WHITEM_FAIL = 'RETURN_WHITEM_FAIL';\r\n\r\n\r\nexport const FETCH_ITEMREQUESTS_SUCCESS = 'FETCH_ITEMREQUESTS_SUCCESS';\r\nexport const FETCH_ITEMREQUESTS_FAIL = 'FETCH_ITEMREQUESTS_FAIL';\r\n\r\n\r\nexport const PERFORM_ITEMREQUESTS_SUCCESS = 'PERFORM_ITEMREQUESTS_SUCCESS';\r\nexport const PERFORM_ITEMREQUESTS_FAIL = 'PERFORM_ITEMREQUESTS_FAIL';\r\n\r\nexport const CANCEL_ITEMREQUESTS_SUCCESS = 'CANCEL_ITEMREQUESTS_SUCCESS';\r\nexport const CANCEL_ITEMREQUESTS_FAIL = 'CANCEL_ITEMREQUESTS_FAIL';\r\n\r\n\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAIL = 'FETCH_CATEGORIES_FAIL';\r\n\r\n\r\nexport const ADD_ITEM_SUCCESS = 'ADD_ITEM_SUCCESS';\r\nexport const ADD_ITEM_FAIL = 'ADD_ITEM_FAIL';\r\n\r\nexport const FETCH_ANITEM_SUCCESS = 'FETCH_ANITEM_SUCCESS';\r\nexport const FETCH_ANITEM_FAIL = 'FETCH_ANITEM_FAIL';\r\n\r\nexport const DELETE_ITEM_SUCCESS = 'DELETE_ITEM_SUCCESS';\r\nexport const DELETE_ITEM_FAIL = 'DELETE_ITEM_FAIL';","import * as actionTypes from '../actions/types';\n\n\nexport const  categoryFilterReducer = (state = '', action) => {\n    switch (action.type) {\n        case actionTypes.ADD_CATEGORY_TO_FILTER:\n            if(state.includes(action.category)) return state;\n            return state += action.category;\n        case actionTypes.REMOVE_CATEGORY_FROM_FILTER:\n            console.log('remove category', action);\n            const reg = new RegExp(action.category, 'gi');\n            return state.replace(reg, '');\n        default:\n            return state;\n    }\n};\n\nexport default categoryFilterReducer;","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n    myitems: [],\r\n    loading: false\r\n};\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nconst fetchMyItemsStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchMyItemsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        myitems: action.myitems,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchMyItemsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst addItemSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        myitems: action.myitems,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst addItemFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.FETCH_MYITEMS_START: return fetchMyItemsStart( state, action );\r\n        case actionTypes.FETCH_MYITEMS_SUCCESS: return fetchMyItemsSuccess( state, action );\r\n        case actionTypes.FETCH_MYITEMS_FAIL: return fetchMyItemsFail( state, action );\r\n        case actionTypes.ADD_ITEM_SUCCESS: return addItemSuccess( state, action );\r\n        case actionTypes.ADD_ITEM_FAIL: return addItemFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/types';\r\nimport { updateObject } from '../utils/utility';\r\n\r\nconst initialState = {\r\n    itemrequests:[],\r\n    myswaprequests: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst sendInit = ( state, action ) => {\r\n    return updateObject( state, { purchased: false } );\r\n};\r\n\r\nconst sendSwapStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst sendSwapSuccess = ( state, action ) => {\r\n    const newSwap = action.swapData;\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        myswaprequests: state.myswaprequests.concat( newSwap )\r\n    } );\r\n};\r\n\r\nconst sendSwapFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\nconst deleteSwapSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        myswaprequests: state.myswaprequests.filter(item => item.id !== action.swapData.id)\r\n    } );\r\n};\r\n\r\nconst deleteSwapFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst fetchMyRequestsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        myswaprequests: action.myRequests\r\n    } );\r\n};\r\n\r\nconst fetchMyRequestsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\nconst fetchItemRequestsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        itemrequests: action.itemrequests\r\n    } );\r\n};\r\n\r\nconst fetchItemRequestsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\n\r\nconst performItemRequestsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        itemrequests: []\r\n    } );\r\n};\r\n\r\nconst performItemRequestsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\n\r\n\r\nconst deleteItemRequestsSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        itemrequests: state.itemrequests.filter(item => item.id !== action.itemrequests)\r\n    } );\r\n};\r\n\r\nconst deleteItemRequestsFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.SEND_INIT: return sendInit( state, action );\r\n        case actionTypes.SEND_SWAP_START: return sendSwapStart( state, action );\r\n        case actionTypes.SEND_SWAP_SUCCESS: return sendSwapSuccess( state, action )\r\n        case actionTypes.SEND_SWAP_FAIL: return sendSwapFail( state, action );\r\n        case actionTypes.DELETE_SWAP_SUCCESS: return deleteSwapSuccess( state, action );\r\n        case actionTypes.DELETE_SWAP_FAIL: return deleteSwapFail( state, action );\r\n        case actionTypes.FETCH_MYREQUESTS_SUCCESS: return fetchMyRequestsSuccess( state, action );\r\n        case actionTypes.FETCH_MYREQUESTS_FAIL: return fetchMyRequestsFail( state, action );\r\n        case actionTypes.FETCH_ITEMREQUESTS_SUCCESS: return fetchItemRequestsSuccess( state, action );\r\n        case actionTypes.FETCH_ITEMREQUESTS_FAIL: return fetchItemRequestsFail( state, action );\r\n        case actionTypes.PERFORM_ITEMREQUESTS_SUCCESS: return performItemRequestsSuccess( state, action );\r\n        case actionTypes.PERFORM_ITEMREQUESTS_FAIL: return performItemRequestsFail( state, action );\r\n        case actionTypes.CANCEL_ITEMREQUESTS_SUCCESS: return deleteItemRequestsSuccess( state, action );\r\n        case actionTypes.CANCEL_ITEMREQUESTS_FAIL: return deleteItemRequestsFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/types';\r\nconst initialState = {\r\n    categories: [],\r\n    loading: false\r\n};\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\n\r\nconst fetchCategoriesSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        categories: action.categories,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchCategoriesFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.FETCH_CATEGORIES_SUCCESS: return fetchCategoriesSuccess( state, action );\r\n        case actionTypes.FETCH_CATEGORIES_FAIL: return fetchCategoriesFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport items from \"./items\"\r\nimport category from './category';\r\nimport myitems from \"./myitems\";\r\nimport swapRequests from \"./swaprequests\";\r\nimport categories from \"./categories\";\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  item:items,\r\n  categoryFilter: category,\r\n  myitems:myitems,\r\n  myswaprequests:swapRequests,\r\n  categories:categories\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // For Spring Boot back-end\r\n     return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    // for Node.js Express back-end\r\n    //return { \"x-access-token\": user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/categories\";\r\n\r\nclass CategoryService {\r\n  getCategories() {\r\n    const results=[];\r\n    axios.get(API_URL +\"/\", { headers: authHeader() })\r\n      .then(\r\n        response => {\r\n            console.log(response.data)\r\n            response.data.forEach(item => {\r\n              results.push(item.name);\r\n            });\r\n        },\r\n        error => {\r\n            console.log(error);\r\n        });\r\n      return results;\r\n  }\r\n\r\n  getCategoriesItem() {\r\n    return axios.get(API_URL +\"/\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new CategoryService();\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password, phoneNumber, contact) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      phoneNumber,\r\n      contact\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password, phoneNumber, contact) => (dispatch) => {\r\n  return AuthService.register(username, email, password, phoneNumber, contact).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n    this.onChangeStreet = this.onChangeStreet.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeState = this.onChangeState.bind(this);\r\n    this.onChangePostalCode = this.onChangePostalCode.bind(this);\r\n    this.onChangeCountry = this.onChangeCountry.bind(this);\r\n\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phoneNumber: \"\",\r\n      contact: {\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        postalCode: \"\",\r\n        country: \"\"\r\n      },\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n  onChangePhoneNumber(e) {\r\n    this.setState({\r\n      phoneNumber: e.target.value,\r\n    });\r\n  }\r\n  onChangeStreet(e) {\r\n    this.setState({ \r\n      contact: { ...this.state.contact, street: e.target.value\r\n      } });\r\n  }\r\n  onChangeCity(e) {\r\n    this.setState({ \r\n      contact: { ...this.state.contact, city: e.target.value\r\n      } });\r\n  }\r\n  onChangeState(e) {\r\n    this.setState({ \r\n      contact: { ...this.state.contact, state: e.target.value\r\n      } });\r\n  }\r\n  onChangePostalCode(e) {\r\n    this.setState({ \r\n      contact: { ...this.state.contact, postalCode: e.target.value\r\n      } });\r\n  }\r\n  onChangeCountry(e) {\r\n    this.setState({ \r\n      contact: { ...this.state.contact, country: e.target.value\r\n      } });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password, \r\n                  this.state.phoneNumber, this.state.contact)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n                <h5>Contact Details</h5>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    name=\"phoneNumber\"\r\n                    value={this.state.phoneNumber}\r\n                    onChange={this.onChangePhoneNumber}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"street\">Street</label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    name=\"street\"\r\n                    value={this.state.contact.street}\r\n                    onChange={this.onChangeStreet}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"city\">City</label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    value={this.state.contact.city}\r\n                    onChange={this.onChangeCity}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"state\">State</label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    name=\"state\"\r\n                    value={this.state.contact.state}\r\n                    onChange={this.onChangeState}\r\n                    validations={[]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"postalCode\">Postal Code</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    name=\"postalCode\"\r\n                    value={this.state.contact.postalCode}\r\n                    onChange={this.onChangePostalCode}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"country\">Country</label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    name=\"country\"\r\n                    value={this.state.contact.country}\r\n                    onChange={this.onChangeCountry}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h1>Swapper</h1>\r\n          <br/>\r\n          <h3>Swap your Items</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Profile extends Component {\r\n\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong> {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div class=\"Backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport './Modal.css';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n\n    render () { \n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    class=\"Modal\"\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Modal;","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/items\";\r\n\r\nclass ItemService {\r\n  getItem(itemid) {\r\n    return axios.get(API_URL +\"/\"+itemid, { headers: authHeader() });\r\n  }\r\n  deleteItem(itemid) {\r\n    return axios.delete(API_URL +\"/\"+itemid, { headers: authHeader() });\r\n  }\r\n  getItems() {\r\n    return axios.get(API_URL +\"/\", { headers: authHeader() });\r\n  }\r\n  getWhItems() {\r\n    return axios.get(API_URL +\"/warehouse/\", { headers: authHeader() });\r\n  }\r\n  getMyItems(userId) {\r\n    return axios.get(API_URL +\"/userId/\"+userId, { headers: authHeader() });\r\n  }\r\n  sendWhItem(userId) {\r\n      return axios.get(API_URL +\"/sendwh/\"+userId, { headers: authHeader() });\r\n  }\r\n  takeWhItem(id, item) {\r\n    return axios.put(API_URL +\"/take/\"+id, item, { headers: authHeader() });\r\n  }\r\n  addItem(itemData) {\r\n    return axios.post(API_URL +\"/\", itemData, { headers: authHeader() });\r\n  }\r\n\r\n}\r\n\r\nexport default new ItemService();\r\n","import ItemService from '../services/item-service';\r\nimport * as actionTypes from './types';\r\n\r\nexport const fetchItemsSuccess = ( items ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMS_SUCCESS,\r\n        items: items\r\n    };\r\n};\r\n\r\nexport const fetchItemsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchItemsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMS_START\r\n    };\r\n};\r\n\r\nexport const fetchItems = () => {\r\n    return dispatch => {\r\n        dispatch(fetchItemsStart());\r\n        ItemService.getItems().then(\r\n            response => {\r\n                console.log(response.data)\r\n                dispatch(fetchItemsSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(fetchItemsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const fetchWhItemsSuccess = ( items ) => {\r\n    return {\r\n        type: actionTypes.FETCH_WHITEMS_SUCCESS,\r\n        items: items\r\n    };\r\n};\r\n\r\nexport const fetchWhItemsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_WHITEMS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchWhItemsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_WHITEMS_START\r\n    };\r\n};\r\n\r\nexport const fetchWhItems = () => {\r\n    return dispatch => {\r\n        dispatch(fetchWhItemsStart());\r\n        ItemService.getWhItems().then(\r\n            response => {\r\n                console.log(response.data)\r\n                dispatch(fetchWhItemsSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(fetchWhItemsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n/********** TAKE item from warehouse and RETURN item to warehouse */\r\n\r\nexport const takeWhItemsSuccess = ( items ) => {\r\n    return {\r\n        type: actionTypes.TAKE_WHITEM_SUCCESS,\r\n        items: items\r\n    };\r\n};\r\n\r\nexport const takeWhItemsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.TAKE_WHITEM_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const takeWhItems = (id, item) => {\r\n    return dispatch => {\r\n        ItemService.takeWhItem(id, item).then(\r\n            response => {\r\n                dispatch(takeWhItemsSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(takeWhItemsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n/* RETURN part */\r\nexport const returnWhItemsSuccess = ( items ) => {\r\n    return {\r\n        type: actionTypes.RETURN_WHITEM_SUCCESS,\r\n        items: items\r\n    };\r\n};\r\n\r\nexport const returnWhItemsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.RETURN_WHITEM_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const returnWhItems = (userId) => {\r\n    return dispatch => {\r\n        ItemService.sendWhItem(userId).then(\r\n            response => {\r\n                dispatch(returnWhItemsSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(returnWhItemsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const fetchAnItemSuccess = ( item ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ANITEM_SUCCESS,\r\n        curitem: item\r\n    };\r\n};\r\n\r\nexport const fetchAnItemFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ANITEM_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const fetchAnItem = (itemid) => {\r\n    return dispatch => {\r\n        ItemService.getItem(itemid).then(\r\n            response => {\r\n                console.log(response.data)\r\n                dispatch(fetchAnItemSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(fetchAnItemFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\nexport const deleteItemSuccess = ( item ) => {\r\n    return {\r\n        type: actionTypes.DELETE_ITEM_SUCCESS,\r\n        curitem: item\r\n    };\r\n};\r\n\r\nexport const deleteItemFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.DELETE_ITEM_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const deleteItem = (itemid) => {\r\n    return dispatch => {\r\n        ItemService.deleteItem(itemid).then(\r\n            response => {\r\n                console.log(response.data)\r\n                dispatch(deleteItemSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(deleteItemFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n","import ItemService from '../services/item-service';\r\nimport * as actionTypes from './types';\r\n\r\n\r\nexport const fetchMyItemsSuccess = ( myitems ) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYITEMS_SUCCESS,\r\n        myitems: myitems\r\n    };\r\n};\r\n\r\nexport const fetchMyItemsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYITEMS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchMyItemsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_MYITEMS_START\r\n    };\r\n};\r\n\r\nexport const fetchMyItems = () => {\r\n    return dispatch => {\r\n        dispatch(fetchMyItemsStart());\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        console.log('USERID'+user.id);\r\n        ItemService.getMyItems(user.id).then(\r\n            response => {\r\n                console.log('response from myitems fetch _  ' + response.data);\r\n                dispatch(fetchMyItemsSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(fetchMyItemsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const addItemFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.ADD_ITEM_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const addItemSuccess = ( myitems ) => {\r\n    return {\r\n        type: actionTypes.ADD_ITEM_SUCCESS,\r\n        myitems: myitems\r\n    };\r\n};\r\n\r\nexport const addItem = (itemData) => {\r\n    return dispatch => {\r\n        ItemService.addItem(itemData).then(\r\n            response => {\r\n                dispatch(addItemSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(addItemFail(error));\r\n            }\r\n          );\r\n    };\r\n};","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/swaps\";\r\n\r\nclass SwapService {\r\n  \r\n  getMySwaps(data) {\r\n    return axios.get(API_URL +\"/myrequests/\"+data, { headers: authHeader() });\r\n  }\r\n\r\n  getItemSwaps(data) {\r\n    return axios.get(API_URL +\"/requesteditem/\"+data, { headers: authHeader() });\r\n  }\r\n\r\n  postSwapRequest(data) {\r\n    return axios.post(API_URL +\"/\", data, { headers: authHeader() });\r\n  }\r\n\r\n  deleteSwapRequest(data) {\r\n    return axios.delete(API_URL +\"/\"+data, { headers: authHeader() });\r\n  }\r\n\r\n  performSwapRequest(data) {\r\n    return axios.get(API_URL +\"/confirm/\"+data, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new SwapService();\r\n","import React, { Component } from 'react';\r\nimport './SwapModal.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../../actions/index';\r\nclass SwapModal extends Component{\r\n    state={\r\n        selectedItemId:\"0\"\r\n    }\r\n    componentDidMount(){\r\n        this.props.onFetchMyItems(); \r\n        console.log(this.props.myitems);\r\n    }\r\n    change =(event) =>{\r\n        this.setState( {  selectedItemId: event.target.value } );\r\n    }\r\n\r\n    clickHandler = () => {\r\n        if(this.props.warehouse===\"0\"){\r\n            if(this.state.selectedItemId!=\"0\"){\r\n            this.props.submitted(this.state.selectedItemId, this.props.myitems.find(item => item.id === this.state.selectedItemId).name);\r\n            }\r\n        }\r\n        else{\r\n            this.props.submitted();\r\n        }\r\n      }\r\n    render(){\r\n        let ss=null;\r\n        if(this.props.warehouse===\"0\"){\r\n            ss=(\r\n                <div class=\"dropdownModal\">\r\n                    <h2>Choose item to Swap</h2>\r\n                    <div class=\"select\">\r\n                    <select name=\"slct\" id=\"slct\"  onChange={this.change}  >\r\n                    <option selected disabled>Choose an option</option>\r\n                    {this.props.myitems.map(item => (\r\n                        <option value={item.id}>{item.name}</option>\r\n                     ))}\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            ss=(\r\n                <div class=\"dropdownModal\">\r\n                    <h2>Do you really need this item?</h2>\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n            <div>\r\n                {ss}\r\n                <div class=\"buttonModal\">\r\n                    <button onClick={this.props.canceled} type=\"button\" class=\"btn btn-secondary btn-lg\">Cancel</button>\r\n                    <button onClick={this.clickHandler}type=\"button\" class=\"btn btn-primary btn-lg\">Send Request</button>   \r\n                </div> \r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state, props) =>  {\r\n  \r\n    const myitems = state.myitems.myitems;\r\n    return {\r\n       myitems\r\n    };\r\n  };\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchMyItems: () => dispatch( actions.fetchMyItems() )\r\n    };\r\n  };\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SwapModal);","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport './ProductDetails.css';\r\nimport { connect } from \"react-redux\";\r\nimport Modal from '../../../UI/Modal/Modal';\r\nimport SwapModal from \"../../../components/SwapModal/SwapModal\";\r\nimport * as actions from '../../../actions/index';\r\nimport { act } from 'react-dom/test-utils';\r\nimport { Link } from 'react-router-dom';\r\nclass ProductDetails extends Component{\r\n\r\n  state={\r\n    show:false,\r\n    requested:false,\r\n    requestId:null\r\n  }\r\n  componentDidMount(){\r\n    this.props.onFetchCurItem(this.props.match.params.id)\r\n    if(this.props.myrequest){\r\n      this.setState({requested:true});\r\n    }\r\n  }\r\n  purchaseCancelHandler = () => {\r\n    this.setState( { show: false } );\r\n}\r\nsendrequestHandler = () => {\r\n  this.setState( { show: true } );\r\n}\r\ncancelrequestHandler = () => {\r\n  this.props.onDeleteSwapRequest(this.props.myrequest);\r\n  this.setState({requested:false});\r\n}\r\nsendRequestHandler = (param, nameparam) =>{\r\n  console.log(param);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const swapData={\r\n    requestedItemId:this.props.item.id,\r\n    requestedItemName:this.props.item.name,\r\n    requestedUserId:this.props.item.userId,\r\n    swapItemId:param,\r\n    swapItemName:nameparam,\r\n    swapUserId:user.id,\r\n    swapUserName:user.username,\r\n    accepted:\"false\"\r\n  }\r\n  this.props.onSendSwapRequest(swapData);\r\n  this.setState( { show: false } );\r\n  this.setState({requested: true})\r\n}\r\n    render(){\r\n      let bt=null;\r\n      if(this.state.requested){\r\n        bt=<button onClick={this.cancelrequestHandler} class=\"btn btn-lg btn-primary text-uppercase\"> Cancel Request </button>;\r\n      }\r\n      else{\r\n        bt=<button onClick={this.sendrequestHandler} class=\"btn btn-lg btn-primary text-uppercase\"> Send Swap Request </button>;\r\n      }\r\n              return (\r\n          <React.Fragment>\r\n            <Modal show={this.state.show} modalClosed={this.purchaseCancelHandler}>\r\n            <SwapModal warehouse=\"0\" myitems={this.props.myitems} canceled={this.purchaseCancelHandler} submitted={this.sendRequestHandler}/>\r\n            </Modal>\r\n        <div class=\"card\">\r\n          <div class=\"row\">\r\n            <aside class=\"col-sm-5 border-right\">\r\n        <article class=\"gallery-wrap\"> \r\n        <div class=\"img-big-wrap\">\r\n          <div class=\"imgcover\"> <img src={this.props.item.url}/></div>\r\n        </div> \r\n        <div class=\"img-small-wrap\">\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n        </div> \r\n        </article> \r\n            </aside>\r\n            <aside class=\"col-sm-7\">\r\n        <article class=\"card-body p-5\">\r\n          <h3 class=\"title mb-3\">{this.props.item.name}</h3>\r\n\r\n\r\n        <dl class=\"item-property\">\r\n          <dt>Description</dt> \r\n          <dd><p>{this.props.item.description}</p></dd>\r\n        </dl>\r\n        <dl class=\"param param-feature\">\r\n          <dt>Category</dt>\r\n          <dd>{this.props.item.category}</dd>\r\n        </dl>  \r\n        <dl class=\"param param-feature\">\r\n          <dt>User:</dt>\r\n          <dd>{this.props.item.username}</dd>\r\n        </dl>  \r\n          <hr/>\r\n          {bt}\r\n         \r\n          <Link to={`/addItem`} class=\"btn btn-lg btn-outline-primary text-uppercase\">Add new Item to Swap</Link>\r\n        </article> \r\n            </aside> \r\n          </div> \r\n        </div> \r\n        \r\n</React.Fragment>\r\n        );\r\n};\r\n}\r\nconst mapStateToProps = (state, props) =>  {\r\n  \r\n  //var item = state.item.items.find(item => item.id === props.match.params.id);\r\n  var item=state.item.curitem;\r\n  if(state.myswaprequests.myswaprequests.length>0){\r\n    var myrequest=state.myswaprequests.myswaprequests.find(req =>req.requestedItemId===item.id);\r\n    if(myrequest!=null){\r\n      return {\r\n        myrequest:myrequest,\r\n        item,\r\n        myitems:state.myitems.myitems,\r\n        loading: state.myitems.loading\r\n      };\r\n  }\r\n  }\r\n  return {\r\n    item,\r\n    myitems:state.myitems.myitems,\r\n    loading: state.myitems.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onSendSwapRequest: (swapData) => dispatch( actions.sendSwap(swapData) ),\r\n      onDeleteSwapRequest: (swapData) => dispatch(actions.deleteSwap(swapData)),\r\n      onFetchCurItem: (itemId) => dispatch(actions.fetchAnItem(itemId))\r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(ProductDetails));","import * as actionTypes from './types';\r\nimport SwapService from '../services/swaprequest-service';\r\nexport const sendSwapSuccess = ( swapData ) => {\r\n    return {\r\n        type: actionTypes.SEND_SWAP_SUCCESS,\r\n        swapData: swapData\r\n    };\r\n};\r\n\r\nexport const sendSwapFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.SEND_SWAP_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const sendSwapStart = () => {\r\n    return {\r\n        type: actionTypes.SEND_SWAP_START\r\n    };\r\n};\r\n\r\nexport const sendSwap = ( swapData ) => {\r\n    return dispatch => {\r\n        dispatch( sendSwapStart() );\r\n        SwapService.postSwapRequest(swapData).then(\r\n            response => {\r\n                dispatch(sendSwapSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(sendSwapFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\nexport const sendInit = () => {\r\n    return {\r\n        type: actionTypes.SEND_INIT\r\n    };\r\n};\r\n\r\nexport const deleteSwapSuccess = ( swapData ) => {\r\n    return {\r\n        type: actionTypes.DELETE_SWAP_SUCCESS,\r\n        swapData: swapData\r\n    };\r\n};\r\n\r\nexport const deleteSwapFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.DELETE_SWAP_FAIL,\r\n        error: error\r\n    };\r\n}\r\nexport const deleteSwap = ( swapData ) => {\r\n    return dispatch => {\r\n        console.log('inside delete swap --- '+swapData);\r\n        SwapService.deleteSwapRequest(swapData.id).then(\r\n            response => {\r\n                dispatch(deleteSwapSuccess(swapData));\r\n            },\r\n            error => {\r\n                dispatch(deleteSwapFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\nexport const fetchMyRequestsSuccess = ( myRequests ) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYREQUESTS_SUCCESS,\r\n        myRequests: myRequests\r\n    };\r\n};\r\n\r\nexport const fetchMyRequestsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYREQUESTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const fetchMyRequests = () => {\r\n    return dispatch => {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        console.log('USERID'+user.id);\r\n        SwapService.getMySwaps(user.id).then(\r\n            response => {\r\n                dispatch(fetchMyRequestsSuccess(response.data));\r\n            },\r\n            error => {\r\n                console.log('nside fetchrequestsfail------ '+error);\r\n                dispatch(fetchMyRequestsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const fetchItemRequestsSuccess = ( itemrequests ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMREQUESTS_SUCCESS,\r\n        itemrequests: itemrequests\r\n    };\r\n};\r\n\r\nexport const fetchItemRequestsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMREQUESTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const fetchItemRequests = (itemId) => {\r\n    return dispatch => {\r\n        SwapService.getItemSwaps(itemId).then(\r\n            response => {\r\n                dispatch(fetchItemRequestsSuccess(response.data));\r\n            },\r\n            error => {\r\n                console.log('nside fetchrequestsfail------ '+error);\r\n                dispatch(fetchItemRequestsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\nexport const performItemRequestsSuccess = ( itemrequests ) => {\r\n    return {\r\n        type: actionTypes.PERFORM_ITEMREQUESTS_SUCCESS,\r\n        itemrequests: itemrequests\r\n    };\r\n};\r\n\r\nexport const performItemRequestsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PERFORM_ITEMREQUESTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const performItemRequests = (requestId) => {\r\n    return dispatch => {\r\n        SwapService.performSwapRequest(requestId).then(\r\n            response => {\r\n                console.log(response.data);\r\n                dispatch(performItemRequestsSuccess(response.data));\r\n            },\r\n            error => {\r\n                console.log('nside performrequestsfail------ '+error);\r\n                dispatch(performItemRequestsFail(error));\r\n            }\r\n          );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const deleteItemRequestsSuccess = ( itemrequests ) => {\r\n    return {\r\n        type: actionTypes.CANCEL_ITEMREQUESTS_SUCCESS,\r\n        itemrequests: itemrequests\r\n    };\r\n};\r\n\r\nexport const deleteItemRequestsFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.CANCEL_ITEMREQUESTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const deleteItemRequests = (requestId) => {\r\n    return dispatch => {\r\n        SwapService.deleteSwapRequest(requestId).then(\r\n            response => {\r\n                console.log(response.data);\r\n                dispatch(deleteItemRequestsSuccess(requestId));\r\n            },\r\n            error => {\r\n                console.log('nside deleterequestsfail------ '+error);\r\n                dispatch(deleteItemRequestsFail(error));\r\n            }\r\n          );\r\n    };\r\n};","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './CategoryFilter.css';\r\nimport * as actions from '../../actions/index';\r\nconst CategoryFilter = (props) => {\r\n    const {dispatch, categoryItemscount} = props;\r\n    const handleSelectBox = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.checked;\r\n\r\n        if(value) {\r\n            dispatch(actions.addCategoryToFilter(name));\r\n        } else {\r\n            dispatch(actions.removeCategoryFromFilter(name));\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"boxes_category\">\r\n            <h1>Categories</h1>\r\n            {props.categories.map(category => (\r\n            <React.Fragment>\r\n                <input id={category} name={category} type='checkbox' onInput={handleSelectBox}/>\r\n                <label for={category}>\r\n                    <span></span>\r\n                    {category} ({categoryItemscount[category]})\r\n                    <ins><i>{category} ({categoryItemscount[category]})</i></ins>\r\n                </label>\r\n            </React.Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\nconst categoryItemscount = {};\r\n\r\nstate.item.items.forEach(p => {\r\n    categoryItemscount[p.category] = categoryItemscount[p.category] + 1 || 1;\r\n});\r\n\r\n\r\nreturn {\r\n    categoryItemscount\r\n}\r\n\r\n};\r\n\r\n//export default connect(mapStateToProps)(BrandFilter);\r\n\r\nexport default connect(mapStateToProps)(CategoryFilter);\r\n","import * as actionTypes from './types';\r\nexport const addCategoryToFilter = category => {\r\n    return {\r\n        type: actionTypes.ADD_CATEGORY_TO_FILTER,\r\n        category\r\n    }\r\n};\r\n\r\n\r\nexport const removeCategoryFromFilter = category => {\r\n    return  {\r\n        type: actionTypes.REMOVE_CATEGORY_FROM_FILTER,\r\n        category\r\n    }\r\n};","import React from 'react';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\nconst Item = (props) => {\r\n  var sectionStyle = {\r\n    backgroundImage:\"url(\"+props.url+\")\"\r\n  };\r\n    return (\r\n      <div class=\"center\">\r\n        <div class=\"property-card\">\r\n          <Link to={props.warehouse==\"0\"? `/items/${props.id}` : `/warehouse/${props.id}`}>\r\n            <div style={ sectionStyle } class=\"property-image\">\r\n              <div class=\"property-image-title\">\r\n               <h5>{props.category || \"Others\"}</h5>\r\n              </div>\r\n            </div></Link>\r\n          <div class=\"property-description\">\r\n            <h5>{props.name} </h5>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <Link to={`/items/${props.id}`}>\r\n            <div class=\"property-social-icons\">\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n\r\n","const categoryFilter = (arr, category) => {\n    if(!category) return arr;\n\n    return arr.filter(item => category.includes(item.category));\n};\nexport default categoryFilter;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Item from '../../components/Item/Item';\r\nimport './ItemList.css';\r\nimport * as actions from '../../actions/index';\r\nimport categoryFilter from '../../pipes/categoryFilter';\r\nclass ItemList extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    componentDidMount () {\r\n        if(this.props.warehouse==\"0\"){\r\n            this.props.onFetchItems();\r\n            this.props.onFetchMyRequests();\r\n        }\r\n        else{\r\n            this.props.onFetchWhItems();\r\n            this.props.onFetchMyRequests();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let items=\"\";\r\n        if ( !this.props.loading ) {\r\n             items = this.props.items.map( item => (\r\n                <Item\r\n                    key={item.id}\r\n                    warehouse={this.props.warehouse}\r\n                    id={item.id}\r\n                    name={item.name}\r\n                    category={item.category}\r\n                    description={item.description}\r\n                    url={item.url} />\r\n            ) )\r\n        }\r\n        return (\r\n            <div class=\"itemlist-wrapper\"> \r\n                    {items}    \r\n            </div>     \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const categories = state.categoryFilter;\r\n    const filterByCategoryArr = categoryFilter(state.item.items, categories);\r\n    return {\r\n        items: filterByCategoryArr,\r\n        loading: state.item.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchItems: () => dispatch( actions.fetchItems() ),\r\n        onFetchWhItems: () => dispatch( actions.fetchWhItems() ),\r\n        onFetchMyRequests: () => dispatch( actions.fetchMyRequests())\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);\r\n//export default ItemList;","import React, { Component } from 'react';\r\nimport CategoryFilter from '../../components/CategoryFilter/CategoryFilter';\r\nimport ItemList from '../../containers/ItemList/ItemList';\r\nimport CategoryService from '../../services/category-service';\r\n\r\nclass ItemsMenu extends Component{\r\n    state ={\r\n        categories:[]\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const categories =CategoryService.getCategories();\r\n        this.setState({categories:categories});\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                        <CategoryFilter categories={this.state.categories}/>\r\n                        <ItemList warehouse=\"0\"/>\r\n            </React.Fragment>\r\n        );\r\n}\r\n}\r\n\r\n\r\nexport default ItemsMenu;","import React, { Component } from 'react';\r\nimport CategoryFilter from '../../components/CategoryFilter/CategoryFilter';\r\nimport ItemList from '../../containers/ItemList/ItemList';\r\nimport CategoryService from '../../services/category-service';\r\n\r\nclass WarehouseMenu extends Component{\r\n    state ={\r\n        categories:[]\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const categories =CategoryService.getCategories();\r\n        this.setState({categories:categories});\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                        <CategoryFilter categories={this.state.categories}/>\r\n                        <h2>WareHouse</h2>\r\n                        <ItemList warehouse=\"1\"/>\r\n            </React.Fragment>\r\n        );\r\n}\r\n}\r\n\r\n\r\nexport default WarehouseMenu;","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport './WhItemDetails.css';\r\nimport { connect } from \"react-redux\";\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport SwapModal from \"../../components/SwapModal/SwapModal\";\r\nimport * as actions from '../../actions/index';\r\nclass WhItemDetails extends Component{\r\n\r\n  state={\r\n    show:false,\r\n    requested:false\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.myrequest){\r\n      this.setState({requested:true});\r\n    }\r\n  }\r\n  purchaseCancelHandler = () => {\r\n    this.setState( { show: false } );\r\n}\r\nsendrequestHandler = () => {\r\n  this.setState( { show: true } );\r\n}\r\ncancelrequestHandler = () => {\r\n  this.props.onReturnItem(this.props.item.id);\r\n  this.setState({requested:false});\r\n}\r\nsendRequestHandler = () =>{\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const item={\r\n  id:this.props.item.id,\r\n\tname:this.props.item.name,\r\n\tcategory:this.props.item.category,\r\n\tdescription:this.props.item.description,\r\n\treleaseDate:this.props.item.releaseDate,\r\n\tuserId:user.id,\r\n\tusername:user.username,\r\n\twarehouse:0\r\n  }\r\n  this.props.onTakeItem(this.props.item.id, item);\r\n  this.setState( { show: false } );\r\n  this.setState({requested: true})\r\n}\r\n    render(){\r\n      let bt=null;\r\n      if(this.state.requested){\r\n        bt=<button onClick={this.cancelrequestHandler} class=\"btn btn-lg btn-primary text-uppercase\"> Return Item to WareHouse </button>;\r\n      }\r\n      else{\r\n        bt=<button onClick={this.sendrequestHandler} class=\"btn btn-lg btn-primary text-uppercase\"> Take Item </button>;\r\n      }\r\n              return (\r\n          <React.Fragment>\r\n            <Modal show={this.state.show} modalClosed={this.purchaseCancelHandler}>\r\n            <SwapModal warehouse=\"1\" canceled={this.purchaseCancelHandler} submitted={this.sendRequestHandler}/>\r\n            </Modal>\r\n        <div class=\"card\">\r\n          <div class=\"row\">\r\n            <aside class=\"col-sm-5 border-right\">\r\n        <article class=\"gallery-wrap\"> \r\n        <div class=\"img-big-wrap\">\r\n          <div> <a href=\"#\"><img src={this.props.item.url}/></a></div>\r\n        </div> \r\n        <div class=\"img-small-wrap\">\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n        </div> \r\n        </article> \r\n            </aside>\r\n            <aside class=\"col-sm-7\">\r\n        <article class=\"card-body p-5\">\r\n          <h3 class=\"title mb-3\">{this.props.item.name}</h3>\r\n\r\n\r\n        <dl class=\"item-property\">\r\n          <dt>Description</dt> \r\n          <dd><p>{this.props.item.description}</p></dd>\r\n        </dl>\r\n        <dl class=\"param param-feature\">\r\n          <dt>Category</dt>\r\n          <dd>{this.props.item.category}</dd>\r\n        </dl>  \r\n        <dl class=\"param param-feature\">\r\n          <dt>User:</dt>\r\n          <dd>{this.props.item.username}</dd>\r\n        </dl>  \r\n          <hr/>\r\n          {bt}\r\n        </article> \r\n            </aside> \r\n          </div> \r\n        </div> \r\n        \r\n</React.Fragment>\r\n        );\r\n};\r\n}\r\nconst mapStateToProps = (state, props) =>  {\r\n  \r\n  var item = state.item.items.find(item => item.id === props.match.params.id);\r\n  if(state.myitems.myitems.length>0){\r\n    var myrequest=state.myitems.myitems.find(req =>req.id===item.id);\r\n    if(myrequest!=null){\r\n      return {\r\n        myrequest:myrequest,\r\n        item,\r\n        loading: state.myitems.loading\r\n      };\r\n  }\r\n  }\r\n  return {\r\n    item,\r\n    loading: state.myitems.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onTakeItem: (id, item) => dispatch( actions.takeWhItems(id, item) ),\r\n      onReturnItem: (id) => dispatch(actions.returnWhItems(id))\r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(WhItemDetails));","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './MyItems.css';\r\nimport * as actions from '../../actions/index';\r\nimport { Link } from 'react-router-dom';\r\nclass MyItems extends Component{\r\n    \r\n    \r\n    componentDidMount() {\r\n        this.props.onFetchMyItems(); \r\n    }\r\n    \r\n    render () {\r\n        let ff= ( \r\n        <li class=\"list-group-item clearfix\">\r\n        <h3 class=\"list-group-item-heading\">\r\n            You don't have items\r\n        </h3>\r\n        <p class=\"list-group-item-text lead\">\r\n            <br />\r\n        </p>\r\n        <div class=\"btn-toolbar pull-right\" role=\"toolbar\" aria-label=\"\">\r\n            <Link to={`/addItem`} class=\"btn btn-primary\">Click to Add</Link>\r\n        </div>\r\n        <hr size=\"10\"/>\r\n        </li>\r\n        );\r\n        if(this.props.myitems.length>0){\r\n            ff= (\r\n                this.props.myitems.map(item => (\r\n                    <li class=\"list-group-item clearfix\">\r\n                    <img class=\"img-responsive img-rounded\" src={item.url} alt=\"\"/>\r\n                    <h3 class=\"list-group-item-heading\">\r\n                        {item.name}\r\n                    </h3>\r\n                    <p class=\"list-group-item-text lead\">\r\n                        Description : {item.description}\r\n                        <br />\r\n                    </p>\r\n                    <div class=\"btn-toolbar pull-right\" role=\"toolbar\" aria-label=\"\">\r\n                        <Link to={`/myitems/${item.id}`} class=\"btn btn-primary\">Details</Link>\r\n                    </div>\r\n                    <hr size=\"10\"/>\r\n                    </li>\r\n                    \r\n                  ))\r\n            );\r\n        }\r\n        return (\r\n            <div class=\"myitem\">\r\n            <div class=\"container\">\r\n                <ul class=\"list-group\">\r\n                {ff}\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, props) =>  {\r\n    const myitems = state.myitems.myitems;\r\n    return {\r\n       myitems\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchMyItems: () => dispatch( actions.fetchMyItems())\r\n    };\r\n  };\r\n export default connect(mapStateToProps,mapDispatchToProps)(MyItems);\r\n","import React, { Component } from 'react';\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport './MyProductDetails.css';\r\nimport { connect } from \"react-redux\";\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport SwapModal from \"../../components/SwapModal/SwapModal\";\r\nimport * as actions from '../../actions/index';\r\nimport {history} from '../../helpers/history';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MyProductDetails extends Component{\r\n\r\n  state={\r\n    show:false,\r\n  }\r\n  componentDidMount(){\r\n    this.props.onFetchRequests(this.props.match.params.id);\r\n  }\r\n\r\n  performRequestHandler = (requestId) =>{\r\n    this.props.onPerformRequests(requestId);\r\n  }\r\n  deleteRequestHandler = (requestId) =>{\r\n    this.props.onDeleteRequests(requestId);\r\n  }\r\n  sendToWhHandler = () =>{\r\n    this.props.onSendToWareHouse(this.props.item.id);\r\n    history.push('/myitems');\r\n  }\r\n\r\n  deleteItemHandler = () =>{\r\n    this.props.onDeleteItem(this.props.item.id);\r\n    history.push('/myitems');\r\n  }\r\n    render(){\r\n      let zz=\r\n      (<div>\r\n        <br/>\r\n        <h5 >Item has no requests</h5>\r\n      </div>\r\n      );\r\n      if(this.props.itemrequests.length>0){\r\n        zz=(\r\n          this.props.itemrequests.map(request => (\r\n            <div class=\"fb\">\r\n            <div class=\"fb-top\">\r\n                <p><b>Item Requests</b><span></span></p>\r\n            </div>\r\n            <img src=\"\" height=\"100\" width=\"100\" alt=\"Image of woman\"/>\r\n            <p class=\"fbinfo\"><Link to={`/items/${request.swapItemId}`}><b>{request.swapItemName}</b></Link> <br/> <span>{request.swapUserName}</span></p>\r\n            <div class=\"button-block\">\r\n                <div class=\"fbconfirm\" onClick={() => {this.performRequestHandler(request.id)}}>Confirm</div>\r\n                <div class=\"fbdelete\" onClick={() => {this.deleteRequestHandler(request.id)}}>Delete Request</div>\r\n            </div>\r\n            <hr/> \r\n            </div>\r\n              ))\r\n        );\r\n      }\r\n              return (\r\n          <React.Fragment>\r\n            <Modal show={this.state.show} modalClosed={this.purchaseCancelHandler}>\r\n            <SwapModal warehouse=\"0\" myitems={this.props.myitems} canceled={this.purchaseCancelHandler} submitted={this.sendRequestHandler}/>\r\n            </Modal>\r\n        <div class=\"card\">\r\n          <div class=\"row\">\r\n            <aside class=\"col-sm-5 border-right\">\r\n        <article class=\"gallery-wrap\"> \r\n        <div class=\"img-big-wrap\">\r\n          <div> <a href=\"#\"><img src={this.props.item.url}/></a></div>\r\n        </div> \r\n        <div class=\"img-small-wrap\">\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n          <div class=\"item-gallery\"> <img src={this.props.item.url}/> </div>\r\n        </div> \r\n        </article> \r\n            </aside>\r\n            <aside class=\"col-sm-7\">\r\n        <article class=\"card-body p-5\">\r\n          <h3 class=\"title mb-3\">{this.props.item.name}</h3>\r\n\r\n        <dl class=\"item-property\">\r\n          <dt>Description</dt> \r\n          <dd><p>{this.props.item.description}</p></dd>\r\n        </dl>\r\n        <dl class=\"param param-feature\">\r\n          <dt>Category</dt>\r\n          <dd>{this.props.item.category}</dd>\r\n        </dl>  \r\n        <dl class=\"param param-feature\">\r\n          <dt>User:</dt>\r\n          <dd>{this.props.item.username}</dd>\r\n        </dl>  \r\n          <hr/><button onClick={() => {this.sendToWhHandler()}} class=\"btn btn-lg btn-primary text-uppercase\"> Send to WareHouse </button>\r\n          <button onClick={() => {this.deleteItemHandler()}} class=\"btn btn-lg btn-outline-primary text-uppercase\"> <i class=\"fas fa-shopping-cart\"></i> Delete Item </button>\r\n        </article> \r\n            </aside> \r\n          </div> \r\n        </div> \r\n        <h1>Requests</h1>\r\n        {zz}\r\n        \r\n</React.Fragment>\r\n        );\r\n};\r\n}\r\nconst mapStateToProps = (state, props) =>  {\r\n  \r\n  var item = state.myitems.myitems.find(item => item.id === props.match.params.id);\r\n  \r\n  return {\r\n    item,\r\n    loading: state.myitems.loading,\r\n    itemrequests:state.myswaprequests.itemrequests\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchRequests: (itemId) => dispatch( actions.fetchItemRequests(itemId) ),\r\n    onPerformRequests: (requestId) => dispatch( actions.performItemRequests(requestId) ),\r\n    onDeleteRequests: (requestId) => dispatch( actions.deleteItemRequests(requestId) ),\r\n    onSendToWareHouse: (itemId) => dispatch( actions.returnWhItems(itemId)),\r\n    onDeleteItem: (itemId) => dispatch( actions.deleteItem(itemId))\r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyProductDetails);","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    return axios.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return axios.get(\"/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './AddItem.css';\r\nimport * as actions from \"../../actions/index\";\r\nimport {history} from '../../helpers/history';\r\nimport UploadService from '../../services/upload-files.service';\r\nclass AddItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeCategory = this.onChangeCategory.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.selectFile=this.selectFile.bind(this);\r\n        this.state = {\r\n            itemdata: {\r\n                id:\"asdf\",\r\n                name: \"\",\r\n                category: \"\",\r\n                description: \"\",\r\n                releaseDate: \"\",\r\n                userId: \"\",\r\n                username: \"\",\r\n                warehouse:0\r\n            },\r\n            selectedFiles:\"\",\r\n            currentFile: \"\",\r\n            fileName:\"\",\r\n            progress: 0,\r\n            message: \"\",\r\n            proxy:\"https://swapper-com.herokuapp.com\"\r\n          };\r\n    }\r\n    upload() {\r\n        let currentFile = this.state.selectedFiles[0];\r\n      //  console.log(currentFile.name);\r\n        this.setState({\r\n          progress: 0,\r\n          currentFile: currentFile,\r\n          fileName: currentFile.name\r\n        });\r\n    \r\n        UploadService.upload(currentFile, (event) => {\r\n          this.setState({\r\n            progress: Math.round((100 * event.loaded) / event.total)\r\n          });\r\n        })\r\n          .then((response) => {\r\n            this.setState({\r\n              message: response.data.message\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              message: \"Could not upload the file!\"\r\n            });\r\n          });\r\n      }\r\n\r\n      onChangeName(e) {\r\n        this.setState({ \r\n            itemdata: { ...this.state.itemdata, name: e.target.value\r\n            } });\r\n      }\r\n      onChangeCategory(e) {\r\n        this.setState({ \r\n            itemdata: { ...this.state.itemdata, category: e.target.value\r\n            } });\r\n      }\r\n      onChangeDescription(e) {\r\n        this.setState({ \r\n            itemdata: { ...this.state.itemdata, description: e.target.value\r\n            } });\r\n      }\r\n\r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.selectedFiles[0]!=null){\r\n        this.upload();\r\n        }\r\n        console.log(this.state.fileName+ '------- inside onSubmit ');\r\n        if(this.state.message!==\"Could not upload the file!\"){\r\n            let newDate = new Date();\r\n            let url='';\r\n            const user = JSON.parse(localStorage.getItem(\"user\"));\r\n            if(this.state.selectedFiles[0]!=null){\r\n            url=this.state.proxy+'/files/'+this.state.selectedFiles[0].name;\r\n            }\r\n            else{\r\n             url=this.state.proxy+'/files/other.png';\r\n            }\r\n            const itemData= {\r\n                id:\"asdf\",\r\n                name: this.state.itemdata.name,\r\n                category: this.state.itemdata.category,\r\n                description: this.state.itemdata.description,\r\n                releaseDate: \"asas\",\r\n                userId: user.id,\r\n                username: user.username,\r\n                warehouse:0,\r\n                url: url\r\n            };\r\n            this.props.onAddItem(itemData);\r\n            history.push('/myitems');\r\n        }\r\n      }\r\n      selectFile(event) {\r\n        this.setState({\r\n          selectedFiles: event.target.files,\r\n        });\r\n      }\r\n    componentDidMount() {\r\n        //this.setState({categories:categories});\r\n        this.props.onFetchCategories();\r\n    }\r\n    \r\n    render () {\r\n      var sectionStyle = {\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\"\r\n      };\r\n        console.log('inside render  ' +this.props.categories[0]);\r\n        return (\r\n            <div class=\"container\"> <div class=\" text-center mt-5 \">\r\n            <h1>Add an Item</h1>\r\n        </div>\r\n        <div class=\"row \">\r\n            <div class=\"col-lg-7 mx-auto\">\r\n                <div style={sectionStyle} class=\"card mt-2 mx-auto p-4 bg-light\">\r\n                    <div class=\"card-body bg-light\">\r\n                        <div class=\"container\">\r\n                            <form onSubmit={this.onSubmit} id=\"contact-form\" role=\"form\">\r\n                                <div class=\"controls\">\r\n                                    <div class=\"row\">\r\n                                        \r\n                                        <div class=\"col-md-10\">\r\n                                            <div class=\"form-group\"> <label for=\"form_lastname\">Name *</label> <input  onChange={this.onChangeName} id=\"form_lastname\" type=\"text\" name=\"surname\" class=\"form-control\" placeholder=\"Please enter item name *\" required=\"required\" data-error=\"Name is required.\"/> </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-10\">\r\n                                            <label className=\"btn btn-default\">\r\n                                            <input type=\"file\" onChange={this.selectFile} />\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"alert alert-light\" role=\"alert\">\r\n                                        {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\"> <label for=\"form_need\">Category *</label> <select  onChange={this.onChangeCategory} id=\"form_need\" name=\"need\" class=\"form-control\" required=\"required\" data-error=\"Please specify your need.\">\r\n                                                    <option value=\"\" selected disabled>--Select Category--</option>\r\n                                                  {this.props.categories.map(item => (\r\n                                                    <option value={item.id}>{item.name}</option>\r\n                                                ))}\r\n                                                </select> </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\"> <label for=\"form_message\">Description *</label> <textarea  onChange={this.onChangeDescription} id=\"form_message\" name=\"message\" class=\"form-control\" placeholder=\"Write your description here.\" rows=\"4\" required=\"required\" data-error=\"Please, leave us a message.\"></textarea> </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\"> <input type=\"submit\" class=\"btn btn-success btn-send pt-2 btn-block \" value=\"Add\"/> </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div> \r\n        </div>\r\n    </div>\r\n        );\r\n};\r\n}\r\nconst mapStateToProps = (state, props) =>  {\r\n  \r\n    \r\n    return {\r\n      categories:state.categories.categories\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onFetchCategories: () => dispatch( actions.fetchCategories() ),\r\n      onAddItem: (itemData) => dispatch( actions.addItem(itemData) )\r\n    };\r\n  };\r\n//export default AddItem;\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddItem);","import CategoryService from '../services/category-service';\r\nimport * as actionTypes from './types';\r\n\r\n\r\nexport const fetchCategoriesSuccess = ( categories ) => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEGORIES_SUCCESS,\r\n        categories: categories\r\n    };\r\n};\r\n\r\nexport const fetchCategoriesFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEGORIES_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n\r\nexport const fetchCategories = () => {\r\n    return dispatch => {\r\n        CategoryService.getCategoriesItem().then(\r\n            response => {\r\n                dispatch(fetchCategoriesSuccess(response.data));\r\n            },\r\n            error => {\r\n                dispatch(fetchCategoriesFail(error));\r\n            }\r\n          );\r\n    };\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport CategoryService from \"./services/category-service\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport ProductDetails from './pages/ItemsMenu/ProductDetails/ProductDetails';\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport { history } from './helpers/history';\r\nimport 'react-app-polyfill/stable';\r\nimport ItemsMenu from './pages/ItemsMenu/ItemsMenu';\r\nimport WarehouseMenu from \"./pages/WarehouseMenu/WarehouseMenu\";\r\nimport WhItemDetails from \"./pages/WhItemDetails/WhItemDetails\";\r\nimport MyItems from \"./pages/MyItems/MyItems\";\r\nimport MyProductDetails from \"./pages/MyProductDetails/MyProductDetails\";\r\nimport AddItem from \"./pages/AddItem/AddItem\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n\r\n    history.listen((location) => {\r\n      props.dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.user;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    this.props.dispatch(logout());\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <Router history={history}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Swapper\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Admin Board\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/items\"} className=\"nav-link\">\r\n                    Items\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/warehouse\"} className=\"nav-link\">\r\n                    Warehouse\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/myitems\"} className=\"nav-link\">\r\n                    My Items\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/items\" component={ItemsMenu} />\r\n              <Route exact path=\"/myitems\" component={MyItems} />\r\n              <Route exact path={'/items/:id'} component={ProductDetails}/>\r\n              <Route exact path={'/myitems/:id'} component={MyProductDetails}/>\r\n              <Route exact path=\"/warehouse\" component={WarehouseMenu}/>\r\n              <Route exact path=\"/addItem\" component={AddItem}/>\r\n              <Route exact path={'/warehouse/:id'} component={WhItemDetails}/>\r\n              <Route path=\"/user\" component={BoardUser} />\r\n              <Route path=\"/mod\" component={BoardModerator} />\r\n              <Route path=\"/admin\" component={BoardAdmin} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chađinge\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}